{"ast":null,"code":"import * as React from 'react';\nimport { isSameMonth } from 'date-fns';\nimport { useDayPicker } from '..';\nimport { getInitialMonth } from './utils/getInitialMonth';\n/** Controls the navigation state. */\n\nexport function useNavigationState() {\n  var context = useDayPicker();\n  var initialMonth = getInitialMonth(context);\n\n  var _a = React.useState(initialMonth),\n      month = _a[0],\n      setMonth = _a[1];\n\n  var goToMonth = function (date) {\n    if (context.disableNavigation) return;\n    setMonth(date);\n  }; // Update month if updated from context.\n\n\n  React.useEffect(function () {\n    // TODO: return void also if `context.defaultMonth`?\n    if (!context.month) return;\n    if (isSameMonth(context.month, month)) return;\n    setMonth(context.month);\n  }, [context.month]);\n  return [month, goToMonth];\n}","map":{"version":3,"sources":["../../../src/contexts/NavigationContext/useNavigationState.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,WAAT,QAA4B,UAA5B;AAEA,SAAS,YAAT,QAA6B,IAA7B;AACA,SAAS,eAAT,QAAgC,yBAAhC;AAEA;;AACA,OAAM,SAAU,kBAAV,GAA4B;AAMhC,MAAM,OAAO,GAAG,YAAY,EAA5B;AACA,MAAM,YAAY,GAAG,eAAe,CAAC,OAAD,CAApC;;AACM,MAAA,EAAA,GAAoB,KAAK,CAAC,QAAN,CAAqB,YAArB,CAApB;AAAA,MAAC,KAAK,GAAA,EAAA,CAAA,CAAA,CAAN;AAAA,MAAQ,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAhB;;AAEN,MAAM,SAAS,GAAG,UAAC,IAAD,EAAW;AAC3B,QAAI,OAAO,CAAC,iBAAZ,EAA+B;AAC/B,IAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAHD,CAVgC,CAehC;;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;AACd;AACA,QAAI,CAAC,OAAO,CAAC,KAAb,EAAoB;AACpB,QAAI,WAAW,CAAC,OAAO,CAAC,KAAT,EAAgB,KAAhB,CAAf,EAAuC;AACvC,IAAA,QAAQ,CAAC,OAAO,CAAC,KAAT,CAAR;AACD,GALD,EAKG,CAAC,OAAO,CAAC,KAAT,CALH;AAOA,SAAO,CAAC,KAAD,EAAQ,SAAR,CAAP;AACD","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { isSameMonth } from 'date-fns';\nimport { useDayPicker } from '..';\nimport { getInitialMonth } from './utils/getInitialMonth';\n/** Controls the navigation state. */\nexport function useNavigationState() {\n    var context = useDayPicker();\n    var initialMonth = getInitialMonth(context);\n    var _a = React.useState(initialMonth), month = _a[0], setMonth = _a[1];\n    var goToMonth = function (date) {\n        if (context.disableNavigation)\n            return;\n        setMonth(date);\n    };\n    // Update month if updated from context.\n    React.useEffect(function () {\n        // TODO: return void also if `context.defaultMonth`?\n        if (!context.month)\n            return;\n        if (isSameMonth(context.month, month))\n            return;\n        setMonth(context.month);\n    }, [context.month]);\n    return [month, goToMonth];\n}\n//# sourceMappingURL=useNavigationState.js.map"]},"metadata":{},"sourceType":"module"}