{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport enUS from 'date-fns/locale/en-US';\nimport * as Components from '../../components';\nimport { DayPickerContext } from './DayPickerContext';\nimport { defaultClassNames } from './defaultClassNames';\nimport * as formatters from './formatters';\nimport * as labels from './labels';\nimport { parseFromToProps, parseModifierProps } from './utils';\n/**\n * The provider for the [[DayPickerContext]].\n */\n\nexport function DayPickerProvider(props) {\n  var _a, _b, _c, _d, _e, _f;\n\n  var children = props.children,\n      initialProps = props.initialProps;\n  var locale = (_a = initialProps.locale) !== null && _a !== void 0 ? _a : enUS;\n  var numberOfMonths = (_b = initialProps.numberOfMonths) !== null && _b !== void 0 ? _b : 1;\n  var today = (_c = initialProps.today) !== null && _c !== void 0 ? _c : new Date(); // Limit navigation\n\n  var _g = parseFromToProps(initialProps),\n      fromDate = _g.fromDate,\n      toDate = _g.toDate; // Default caption layout. If calendar navigation is unlimited, it must be\n  // always `buttons` – as we cannot display infinite options in the dropdown.\n\n\n  var captionLayout = (_d = initialProps.captionLayout) !== null && _d !== void 0 ? _d : 'buttons';\n  if (!fromDate && !toDate) captionLayout = 'buttons';\n  var modifiers = parseModifierProps(initialProps); // Disable days before/after from/toDate\n\n  if (fromDate) {\n    modifiers.disabled.push({\n      before: fromDate\n    });\n  }\n\n  if (toDate) {\n    modifiers.disabled.push({\n      after: toDate\n    });\n  }\n\n  var toYear = initialProps.toYear,\n      fromYear = initialProps.fromYear,\n      toMonth = initialProps.toMonth,\n      fromMonth = initialProps.fromMonth,\n      contextProps = __rest(initialProps, [\"toYear\", \"fromYear\", \"toMonth\", \"fromMonth\"]);\n\n  var context = __assign(__assign({}, contextProps), {\n    captionLayout: captionLayout,\n    fromDate: fromDate,\n    toDate: toDate,\n    today: today,\n    locale: locale,\n    modifierClassNames: (_e = initialProps.modifierClassNames) !== null && _e !== void 0 ? _e : {},\n    modifierPrefix: 'rdp-day_',\n    modifiers: modifiers,\n    numberOfMonths: numberOfMonths,\n    styles: (_f = initialProps.styles) !== null && _f !== void 0 ? _f : {},\n    classNames: __assign(__assign({}, defaultClassNames), initialProps.classNames),\n    formatters: __assign(__assign({}, formatters), initialProps.formatters),\n    labels: __assign(__assign({}, labels), initialProps.labels),\n    components: __assign({\n      Caption: Components.Caption,\n      CaptionLabel: Components.CaptionLabel,\n      Day: Components.Day,\n      DayContent: Components.DayContent,\n      Dropdown: Components.Dropdown,\n      Footer: Components.Footer,\n      Head: Components.Head,\n      IconDropdown: Components.IconDropdown,\n      IconNext: Components.IconNext,\n      IconPrevious: Components.IconPrevious,\n      Row: Components.Row,\n      WeekNumber: Components.WeekNumber\n    }, initialProps.components)\n  });\n\n  return React.createElement(DayPickerContext.Provider, {\n    value: context\n  }, children);\n}","map":{"version":3,"sources":["../../../src/contexts/DayPickerContext/DayPickerProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport enUS from 'date-fns/locale/en-US';\nimport * as Components from '../../components';\nimport { DayPickerContext } from './DayPickerContext';\nimport { defaultClassNames } from './defaultClassNames';\nimport * as formatters from './formatters';\nimport * as labels from './labels';\nimport { parseFromToProps, parseModifierProps } from './utils';\n/**\n * The provider for the [[DayPickerContext]].\n */\nexport function DayPickerProvider(props) {\n    var _a, _b, _c, _d, _e, _f;\n    var children = props.children, initialProps = props.initialProps;\n    var locale = (_a = initialProps.locale) !== null && _a !== void 0 ? _a : enUS;\n    var numberOfMonths = (_b = initialProps.numberOfMonths) !== null && _b !== void 0 ? _b : 1;\n    var today = (_c = initialProps.today) !== null && _c !== void 0 ? _c : new Date();\n    // Limit navigation\n    var _g = parseFromToProps(initialProps), fromDate = _g.fromDate, toDate = _g.toDate;\n    // Default caption layout. If calendar navigation is unlimited, it must be\n    // always `buttons` – as we cannot display infinite options in the dropdown.\n    var captionLayout = (_d = initialProps.captionLayout) !== null && _d !== void 0 ? _d : 'buttons';\n    if (!fromDate && !toDate)\n        captionLayout = 'buttons';\n    var modifiers = parseModifierProps(initialProps);\n    // Disable days before/after from/toDate\n    if (fromDate) {\n        modifiers.disabled.push({ before: fromDate });\n    }\n    if (toDate) {\n        modifiers.disabled.push({ after: toDate });\n    }\n    var toYear = initialProps.toYear, fromYear = initialProps.fromYear, toMonth = initialProps.toMonth, fromMonth = initialProps.fromMonth, contextProps = __rest(initialProps, [\"toYear\", \"fromYear\", \"toMonth\", \"fromMonth\"]);\n    var context = __assign(__assign({}, contextProps), { captionLayout: captionLayout,\n        fromDate: fromDate,\n        toDate: toDate,\n        today: today,\n        locale: locale, modifierClassNames: (_e = initialProps.modifierClassNames) !== null && _e !== void 0 ? _e : {}, modifierPrefix: 'rdp-day_', modifiers: modifiers, numberOfMonths: numberOfMonths, styles: (_f = initialProps.styles) !== null && _f !== void 0 ? _f : {}, classNames: __assign(__assign({}, defaultClassNames), initialProps.classNames), formatters: __assign(__assign({}, formatters), initialProps.formatters), labels: __assign(__assign({}, labels), initialProps.labels), components: __assign({ Caption: Components.Caption, CaptionLabel: Components.CaptionLabel, Day: Components.Day, DayContent: Components.DayContent, Dropdown: Components.Dropdown, Footer: Components.Footer, Head: Components.Head, IconDropdown: Components.IconDropdown, IconNext: Components.IconNext, IconPrevious: Components.IconPrevious, Row: Components.Row, WeekNumber: Components.WeekNumber }, initialProps.components) });\n    return (React.createElement(DayPickerContext.Provider, { value: context }, children));\n}\n//# sourceMappingURL=DayPickerProvider.js.map"]},"metadata":{},"sourceType":"module"}