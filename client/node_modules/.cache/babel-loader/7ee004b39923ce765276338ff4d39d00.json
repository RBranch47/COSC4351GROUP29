{"ast":null,"code":"import * as React from 'react';\nimport { isSameDay } from 'date-fns';\nimport { useFocus } from '../../../contexts';\n/** Handle the focus for the day element. */\n\nexport function useDayFocus(date, buttonRef) {\n  var _a = useFocus(),\n      focusedDay = _a[0],\n      _b = _a[1],\n      focusDayAfter = _b.focusDayAfter,\n      focusDayBefore = _b.focusDayBefore,\n      focusWeekAfterDay = _b.focusWeekAfterDay,\n      focusWeekBeforeDay = _b.focusWeekBeforeDay,\n      blur = _b.blur,\n      focus = _b.focus; // Focus the HTML element if this is the focused day.\n\n\n  React.useEffect(function () {\n    var _a;\n\n    if (!focusedDay) return;\n\n    if (isSameDay(focusedDay, date)) {\n      (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [focusedDay]);\n\n  var focusOnKeyDown = function (e) {\n    switch (e.key) {\n      case 'ArrowLeft':\n        e.preventDefault();\n        e.stopPropagation();\n        focusDayBefore();\n        break;\n\n      case 'ArrowRight':\n        e.preventDefault();\n        e.stopPropagation();\n        focusDayAfter();\n        break;\n\n      case 'ArrowDown':\n        e.preventDefault();\n        e.stopPropagation();\n        focusWeekAfterDay();\n        break;\n\n      case 'ArrowUp':\n        e.preventDefault();\n        e.stopPropagation();\n        focusWeekBeforeDay();\n        break;\n    }\n  };\n\n  var isFocused = Boolean(focusedDay && !isSameDay(focusedDay, date));\n  return {\n    focus: focus,\n    blur: blur,\n    focusOnKeyDown: focusOnKeyDown,\n    isFocused: isFocused\n  };\n}","map":{"version":3,"sources":["../../../../src/components/Day/hooks/useDayFocus.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,SAAT,QAA0B,UAA1B;AAEA,SAAS,QAAT,QAAyB,mBAAzB;AAEA;;AACA,OAAM,SAAU,WAAV,CACJ,IADI,EAEJ,SAFI,EAEyC;AAOvC,MAAA,EAAA,GAUF,QAAQ,EAVN;AAAA,MACJ,UAAU,GAAA,EAAA,CAAA,CAAA,CADN;AAAA,MAEJ,EAAA,GAAA,EAAA,CAAA,CAAA,CAFI;AAAA,MAGF,aAAa,GAAA,EAAA,CAAA,aAHX;AAAA,MAIF,cAAc,GAAA,EAAA,CAAA,cAJZ;AAAA,MAKF,iBAAiB,GAAA,EAAA,CAAA,iBALf;AAAA,MAMF,kBAAkB,GAAA,EAAA,CAAA,kBANhB;AAAA,MAOF,IAAI,GAAA,EAAA,CAAA,IAPF;AAAA,MAQF,KAAK,GAAA,EAAA,CAAA,KARH,CAPuC,CAmB7C;;;AACA,EAAA,KAAK,CAAC,SAAN,CAAgB,YAAA;;;AACd,QAAI,CAAC,UAAL,EAAiB;;AACjB,QAAI,SAAS,CAAC,UAAD,EAAa,IAAb,CAAb,EAAiC;AAC/B,OAAA,EAAA,GAAA,SAAS,CAAC,OAAV,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,KAAF,EAAjB;AACD;AACF,GALD,EAKG,CAAC,UAAD,CALH;;AAOA,MAAM,cAAc,GAA+B,UAAC,CAAD,EAAE;AACnD,YAAQ,CAAC,CAAC,GAAV;AACE,WAAK,WAAL;AACE,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,cAAc;AACd;;AACF,WAAK,YAAL;AACE,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,aAAa;AACb;;AACF,WAAK,WAAL;AACE,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,iBAAiB;AACjB;;AACF,WAAK,SAAL;AACE,QAAA,CAAC,CAAC,cAAF;AACA,QAAA,CAAC,CAAC,eAAF;AACA,QAAA,kBAAkB;AAClB;AApBJ;AAsBD,GAvBD;;AAyBA,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,IAAI,CAAC,SAAS,CAAC,UAAD,EAAa,IAAb,CAAzB,CAAzB;AAEA,SAAO;AAAE,IAAA,KAAK,EAAA,KAAP;AAAS,IAAA,IAAI,EAAA,IAAb;AAAe,IAAA,cAAc,EAAA,cAA7B;AAA+B,IAAA,SAAS,EAAA;AAAxC,GAAP;AACD","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { isSameDay } from 'date-fns';\nimport { useFocus } from '../../../contexts';\n/** Handle the focus for the day element. */\nexport function useDayFocus(date, buttonRef) {\n    var _a = useFocus(), focusedDay = _a[0], _b = _a[1], focusDayAfter = _b.focusDayAfter, focusDayBefore = _b.focusDayBefore, focusWeekAfterDay = _b.focusWeekAfterDay, focusWeekBeforeDay = _b.focusWeekBeforeDay, blur = _b.blur, focus = _b.focus;\n    // Focus the HTML element if this is the focused day.\n    React.useEffect(function () {\n        var _a;\n        if (!focusedDay)\n            return;\n        if (isSameDay(focusedDay, date)) {\n            (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n        }\n    }, [focusedDay]);\n    var focusOnKeyDown = function (e) {\n        switch (e.key) {\n            case 'ArrowLeft':\n                e.preventDefault();\n                e.stopPropagation();\n                focusDayBefore();\n                break;\n            case 'ArrowRight':\n                e.preventDefault();\n                e.stopPropagation();\n                focusDayAfter();\n                break;\n            case 'ArrowDown':\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekAfterDay();\n                break;\n            case 'ArrowUp':\n                e.preventDefault();\n                e.stopPropagation();\n                focusWeekBeforeDay();\n                break;\n        }\n    };\n    var isFocused = Boolean(focusedDay && !isSameDay(focusedDay, date));\n    return { focus: focus, blur: blur, focusOnKeyDown: focusOnKeyDown, isFocused: isFocused };\n}\n//# sourceMappingURL=useDayFocus.js.map"]},"metadata":{},"sourceType":"module"}