{"ast":null,"code":"import * as React from 'react';\nimport { isSameMonth } from 'date-fns';\nimport { MonthsDropdown, Navigation, YearsDropdown } from '..';\nimport { useDayPicker, useNavigation } from '../../contexts';\n/**\n * Render the caption of a month, which includes title and navigation buttons.\n * The caption has a different layout when setting the `numberOfMonths` prop.\n */\n\nexport function Caption(props) {\n  var _a;\n\n  var displayMonth = props.displayMonth;\n  var context = useDayPicker();\n  var classNames = context.classNames,\n      numberOfMonths = context.numberOfMonths,\n      disableNavigation = context.disableNavigation,\n      styles = context.styles,\n      captionLayout = context.captionLayout,\n      onMonthChange = context.onMonthChange,\n      dir = context.dir,\n      CaptionLabel = context.components.CaptionLabel;\n\n  var _b = useNavigation(),\n      previousMonth = _b.previousMonth,\n      nextMonth = _b.nextMonth,\n      goToMonth = _b.goToMonth,\n      displayMonths = _b.displayMonths;\n\n  var handlePreviousClick = function (e) {\n    if (!previousMonth) return;\n    goToMonth(previousMonth);\n    onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(previousMonth);\n  };\n\n  var handleNextClick = function (e) {\n    if (!nextMonth) return;\n    goToMonth(nextMonth);\n    onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(nextMonth);\n  };\n\n  var handleMonthChange = function (newMonth) {\n    goToMonth(newMonth);\n    onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(newMonth);\n  };\n\n  var displayIndex = displayMonths.findIndex(function (month) {\n    return isSameMonth(displayMonth, month);\n  });\n  var isFirst = displayIndex === 0;\n  var isLast = displayIndex === displayMonths.length - 1;\n\n  if (dir === 'rtl') {\n    _a = [isFirst, isLast], isLast = _a[0], isFirst = _a[1];\n  }\n\n  var captionLabel = React.createElement(CaptionLabel, {\n    displayMonth: displayMonth\n  });\n  var hideNext = numberOfMonths > 1 && (isFirst || !isLast);\n  var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);\n  return React.createElement(\"div\", {\n    className: classNames.caption,\n    style: styles.caption\n  }, disableNavigation && captionLabel, !disableNavigation && React.createElement(React.Fragment, null, captionLayout === 'dropdown' ? React.createElement(\"div\", {\n    className: classNames.caption_dropdowns,\n    style: styles.caption_dropdowns\n  }, React.createElement(MonthsDropdown, {\n    onChange: handleMonthChange,\n    displayMonth: displayMonth\n  }), React.createElement(YearsDropdown, {\n    onChange: handleMonthChange,\n    displayMonth: displayMonth\n  })) : React.createElement(React.Fragment, null, React.createElement(CaptionLabel, {\n    displayMonth: displayMonth\n  }), React.createElement(Navigation, {\n    displayMonth: displayMonth,\n    hideNext: hideNext,\n    hidePrevious: hidePrevious,\n    nextMonth: nextMonth,\n    previousMonth: previousMonth,\n    onPreviousClick: handlePreviousClick,\n    onNextClick: handleNextClick\n  }))));\n}","map":{"version":3,"sources":["../../../src/components/Caption/Caption.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,WAAT,QAA4B,UAA5B;AAEA,SAAS,cAAT,EAAyB,UAAzB,EAAqC,aAArC,QAA0D,IAA1D;AACA,SAAS,YAAT,EAAuB,aAAvB,QAA4C,gBAA5C;AAIA;;;AAGG;;AACH,OAAM,SAAU,OAAV,CAAkB,KAAlB,EAAqC;;;AACjC,MAAA,YAAY,GAAK,KAAK,CAAV,YAAZ;AACR,MAAM,OAAO,GAAG,YAAY,EAA5B;AAEE,MAAA,UAAU,GAQR,OAAO,CARC,UAAV;AAAA,MACA,cAAc,GAOZ,OAAO,CAPK,cADd;AAAA,MAEA,iBAAiB,GAMf,OAAO,CANQ,iBAFjB;AAAA,MAGA,MAAM,GAKJ,OAAO,CALH,MAHN;AAAA,MAIA,aAAa,GAIX,OAAO,CAJI,aAJb;AAAA,MAKA,aAAa,GAGX,OAAO,CAHI,aALb;AAAA,MAMA,GAAG,GAED,OAAO,CAFN,GANH;AAAA,MAOc,YAAY,GACxB,OAAO,CAAA,UAAP,CADwB,YAP1B;;AAUI,MAAA,EAAA,GAKF,aAAa,EALX;AAAA,MACJ,aAAa,GAAA,EAAA,CAAA,aADT;AAAA,MAEJ,SAAS,GAAA,EAAA,CAAA,SAFL;AAAA,MAGJ,SAAS,GAAA,EAAA,CAAA,SAHL;AAAA,MAIJ,aAAa,GAAA,EAAA,CAAA,aAJT;;AAON,MAAM,mBAAmB,GAA4B,UAAC,CAAD,EAAE;AACrD,QAAI,CAAC,aAAL,EAAoB;AACpB,IAAA,SAAS,CAAC,aAAD,CAAT;AACA,IAAA,aAAa,KAAA,IAAb,IAAA,aAAa,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAA,aAAa,CAAG,aAAH,CAAb;AACD,GAJD;;AAMA,MAAM,eAAe,GAA4B,UAAC,CAAD,EAAE;AACjD,QAAI,CAAC,SAAL,EAAgB;AAChB,IAAA,SAAS,CAAC,SAAD,CAAT;AACA,IAAA,aAAa,KAAA,IAAb,IAAA,aAAa,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAA,aAAa,CAAG,SAAH,CAAb;AACD,GAJD;;AAMA,MAAM,iBAAiB,GAA4B,UAAC,QAAD,EAAS;AAC1D,IAAA,SAAS,CAAC,QAAD,CAAT;AACA,IAAA,aAAa,KAAA,IAAb,IAAA,aAAa,KAAA,KAAA,CAAb,GAAa,KAAA,CAAb,GAAA,aAAa,CAAG,QAAH,CAAb;AACD,GAHD;;AAKA,MAAM,YAAY,GAAG,aAAa,CAAC,SAAd,CAAwB,UAAC,KAAD,EAAM;AACjD,WAAA,WAAW,CAAC,YAAD,EAAe,KAAf,CAAX;AAAgC,GADb,CAArB;AAGA,MAAI,OAAO,GAAG,YAAY,KAAK,CAA/B;AACA,MAAI,MAAM,GAAG,YAAY,KAAK,aAAa,CAAC,MAAd,GAAuB,CAArD;;AACA,MAAI,GAAG,KAAK,KAAZ,EAAmB;AACjB,IAAA,EAAA,GAAoB,CAAC,OAAD,EAAU,MAAV,CAApB,EAAC,MAAM,GAAA,EAAA,CAAA,CAAA,CAAP,EAAS,OAAO,GAAA,EAAA,CAAA,CAAA,CAAhB;AACD;;AAED,MAAM,YAAY,GAAG,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,YAAY,EAAE;AAAf,GAAb,CAArB;AACA,MAAM,QAAQ,GAAG,cAAc,GAAG,CAAjB,KAAuB,OAAO,IAAI,CAAC,MAAnC,CAAjB;AACA,MAAM,YAAY,GAAG,cAAc,GAAG,CAAjB,KAAuB,MAAM,IAAI,CAAC,OAAlC,CAArB;AAEA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAE,UAAU,CAAC,OAA3B;AAAoC,IAAA,KAAK,EAAE,MAAM,CAAC;AAAlD,GAAA,EACG,iBAAiB,IAAI,YADxB,EAEG,CAAC,iBAAD,IACC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,aAAa,KAAK,UAAlB,GACC,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,IAAA,SAAS,EAAE,UAAU,CAAC,iBADxB;AAEE,IAAA,KAAK,EAAE,MAAM,CAAC;AAFhB,GAAA,EAIE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACb,IAAA,QAAQ,EAAE,iBADG;AAEb,IAAA,YAAY,EAAE;AAFD,GAAf,CAJF,EAQE,KAAA,CAAA,aAAA,CAAC,aAAD,EAAc;AACZ,IAAA,QAAQ,EAAE,iBADE;AAEZ,IAAA,YAAY,EAAE;AAFF,GAAd,CARF,CADD,GAeC,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,YAAY,EAAE;AAAf,GAAb,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,YAAY,EAAE,YADL;AAET,IAAA,QAAQ,EAAE,QAFD;AAGT,IAAA,YAAY,EAAE,YAHL;AAIT,IAAA,SAAS,EAAE,SAJF;AAKT,IAAA,aAAa,EAAE,aALN;AAMT,IAAA,eAAe,EAAE,mBANR;AAOT,IAAA,WAAW,EAAE;AAPJ,GAAX,CAFF,CAhBJ,CAHJ,CADF;AAqCD","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { isSameMonth } from 'date-fns';\nimport { MonthsDropdown, Navigation, YearsDropdown } from '..';\nimport { useDayPicker, useNavigation } from '../../contexts';\n/**\n * Render the caption of a month, which includes title and navigation buttons.\n * The caption has a different layout when setting the `numberOfMonths` prop.\n */\nexport function Caption(props) {\n    var _a;\n    var displayMonth = props.displayMonth;\n    var context = useDayPicker();\n    var classNames = context.classNames, numberOfMonths = context.numberOfMonths, disableNavigation = context.disableNavigation, styles = context.styles, captionLayout = context.captionLayout, onMonthChange = context.onMonthChange, dir = context.dir, CaptionLabel = context.components.CaptionLabel;\n    var _b = useNavigation(), previousMonth = _b.previousMonth, nextMonth = _b.nextMonth, goToMonth = _b.goToMonth, displayMonths = _b.displayMonths;\n    var handlePreviousClick = function (e) {\n        if (!previousMonth)\n            return;\n        goToMonth(previousMonth);\n        onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(previousMonth);\n    };\n    var handleNextClick = function (e) {\n        if (!nextMonth)\n            return;\n        goToMonth(nextMonth);\n        onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(nextMonth);\n    };\n    var handleMonthChange = function (newMonth) {\n        goToMonth(newMonth);\n        onMonthChange === null || onMonthChange === void 0 ? void 0 : onMonthChange(newMonth);\n    };\n    var displayIndex = displayMonths.findIndex(function (month) {\n        return isSameMonth(displayMonth, month);\n    });\n    var isFirst = displayIndex === 0;\n    var isLast = displayIndex === displayMonths.length - 1;\n    if (dir === 'rtl') {\n        _a = [isFirst, isLast], isLast = _a[0], isFirst = _a[1];\n    }\n    var captionLabel = React.createElement(CaptionLabel, { displayMonth: displayMonth });\n    var hideNext = numberOfMonths > 1 && (isFirst || !isLast);\n    var hidePrevious = numberOfMonths > 1 && (isLast || !isFirst);\n    return (React.createElement(\"div\", { className: classNames.caption, style: styles.caption },\n        disableNavigation && captionLabel,\n        !disableNavigation && (React.createElement(React.Fragment, null, captionLayout === 'dropdown' ? (React.createElement(\"div\", { className: classNames.caption_dropdowns, style: styles.caption_dropdowns },\n            React.createElement(MonthsDropdown, { onChange: handleMonthChange, displayMonth: displayMonth }),\n            React.createElement(YearsDropdown, { onChange: handleMonthChange, displayMonth: displayMonth }))) : (React.createElement(React.Fragment, null,\n            React.createElement(CaptionLabel, { displayMonth: displayMonth }),\n            React.createElement(Navigation, { displayMonth: displayMonth, hideNext: hideNext, hidePrevious: hidePrevious, nextMonth: nextMonth, previousMonth: previousMonth, onPreviousClick: handlePreviousClick, onNextClick: handleNextClick })))))));\n}\n//# sourceMappingURL=Caption.js.map"]},"metadata":{},"sourceType":"module"}