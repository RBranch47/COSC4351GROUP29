{"ast":null,"code":"import * as React from 'react';\nimport { differenceInCalendarDays, isAfter, isBefore } from 'date-fns';\nimport { isDayPickerRange } from '../../types';\nimport { SelectRangeContext } from './SelectRangeContext';\nimport { addToRange } from './utils/addToRange';\n/** Provides the values for the [[SelectRangeProvider]]. */\n\nexport function SelectRangeProvider(_a) {\n  var initialProps = _a.initialProps,\n      children = _a.children;\n  var initialSelected;\n  var isRangeMode = false;\n  var min, max;\n\n  if (isDayPickerRange(initialProps)) {\n    isRangeMode = true;\n    initialSelected = initialProps.defaultSelected;\n    min = initialProps.min;\n    max = initialProps.max;\n  }\n\n  var _b = React.useState(initialSelected),\n      selected = _b[0],\n      setSelected = _b[1];\n\n  var handleDayClick = function (day, modifiers, e) {\n    var _a, _b;\n\n    (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, modifiers, e);\n\n    if (!isDayPickerRange(initialProps)) {\n      return;\n    }\n\n    var newValue = addToRange(day, selected);\n\n    if ((min || max) && selected && (newValue === null || newValue === void 0 ? void 0 : newValue.to) && newValue.from && newValue.from !== newValue.to) {\n      var diff = Math.abs(differenceInCalendarDays(newValue === null || newValue === void 0 ? void 0 : newValue.to, newValue === null || newValue === void 0 ? void 0 : newValue.from));\n\n      if (min && diff < min) {\n        return;\n      }\n\n      if (max && diff >= max) {\n        return;\n      }\n    }\n\n    setSelected(newValue);\n    (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newValue, day, modifiers, e);\n  };\n\n  var modifiers = {\n    selected: [],\n    range_start: [],\n    range_end: [],\n    range_middle: [],\n    disabled: []\n  };\n\n  if (selected) {\n    modifiers.selected = [selected];\n\n    if (selected.from) {\n      modifiers.range_start = [selected.from];\n\n      if (selected.to) {\n        modifiers.range_middle = [{\n          after: selected.from,\n          before: selected.to\n        }];\n\n        if (max || min) {\n          modifiers.disabled = [function (date) {\n            if (max && selected.to && selected.from && isBefore(date, selected.from)) {\n              var diff = differenceInCalendarDays(selected.to, date);\n\n              if (diff >= max) {\n                return true;\n              }\n            }\n\n            if (max && selected.to && selected.from && isAfter(date, selected.to)) {\n              var diff = differenceInCalendarDays(date, selected.from);\n\n              if (diff >= max) {\n                return true;\n              }\n            }\n\n            if (min && selected.from && isBefore(date, selected.from)) {\n              var diff = differenceInCalendarDays(selected.from, date);\n\n              if (diff < min) {\n                return true;\n              }\n            }\n\n            if (min && selected.to && selected.from && isAfter(date, selected.to)) {\n              var diff = differenceInCalendarDays(date, selected.from);\n\n              if (diff < min) {\n                return true;\n              }\n            }\n\n            return false;\n          }];\n        }\n\n        modifiers.range_end = [selected.to];\n      } else {\n        modifiers.range_end = [selected.from];\n      }\n    }\n  }\n\n  return React.createElement(SelectRangeContext.Provider, {\n    value: {\n      selected: selected,\n      handleDayClick: handleDayClick,\n      modifiers: modifiers,\n      isRangeMode: isRangeMode\n    }\n  }, children);\n}","map":{"version":3,"sources":["../../../src/contexts/SelectRangeContext/SelectRangeProvider.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,wBAAT,EAAmC,OAAnC,EAA4C,QAA5C,QAA4D,UAA5D;AAEA,SAIE,gBAJF,QAKO,aALP;AAMA,SAAS,kBAAT,QAAmC,sBAAnC;AAEA,SAAS,UAAT,QAA2B,oBAA3B;AAEA;;AACA,OAAM,SAAU,mBAAV,CAA8B,EAA9B,EAML;MALC,YAAY,GAAA,EAAA,CAAA,Y;MACZ,QAAQ,GAAA,EAAA,CAAA,Q;AAKR,MAAI,eAAJ;AACA,MAAI,WAAW,GAAG,KAAlB;AACA,MAAI,GAAJ,EAA6B,GAA7B;;AACA,MAAI,gBAAgB,CAAC,YAAD,CAApB,EAAoC;AAClC,IAAA,WAAW,GAAG,IAAd;AACA,IAAA,eAAe,GAAG,YAAY,CAAC,eAA/B;AACA,IAAA,GAAG,GAAG,YAAY,CAAC,GAAnB;AACA,IAAA,GAAG,GAAG,YAAY,CAAC,GAAnB;AACD;;AACK,MAAA,EAAA,GAA0B,KAAK,CAAC,QAAN,CAC9B,eAD8B,CAA1B;AAAA,MAAC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,MAAW,WAAW,GAAA,EAAA,CAAA,CAAA,CAAtB;;AAIN,MAAM,cAAc,GAAyB,UAAC,GAAD,EAAM,SAAN,EAAiB,CAAjB,EAAkB;;;AAC7D,KAAA,EAAA,GAAA,YAAY,CAAC,UAAb,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAuB,EAAA,CAAA,IAAA,CAAvB,YAAuB,EAAG,GAAH,EAAQ,SAAR,EAAmB,CAAnB,CAAvB;;AACA,QAAI,CAAC,gBAAgB,CAAC,YAAD,CAArB,EAAqC;AACnC;AACD;;AACD,QAAM,QAAQ,GAAG,UAAU,CAAC,GAAD,EAAM,QAAN,CAA3B;;AACA,QACE,CAAC,GAAG,IAAI,GAAR,KACA,QADA,KAEA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,EAFV,KAGA,QAAQ,CAAC,IAHT,IAIA,QAAQ,CAAC,IAAT,KAAkB,QAAQ,CAAC,EAL7B,EAME;AACA,UAAM,IAAI,GAAG,IAAI,CAAC,GAAL,CACX,wBAAwB,CAAC,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,EAAX,EAAe,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,IAAzB,CADb,CAAb;;AAGA,UAAI,GAAG,IAAI,IAAI,GAAG,GAAlB,EAAuB;AACrB;AACD;;AACD,UAAI,GAAG,IAAI,IAAI,IAAI,GAAnB,EAAwB;AACtB;AACD;AACF;;AACD,IAAA,WAAW,CAAC,QAAD,CAAX;AACA,KAAA,EAAA,GAAA,YAAY,CAAC,QAAb,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAA,IAAA,CAArB,YAAqB,EAAG,QAAH,EAAa,GAAb,EAAkB,SAAlB,EAA6B,CAA7B,CAArB;AACD,GAzBD;;AA2BA,MAAM,SAAS,GAAyB;AACtC,IAAA,QAAQ,EAAE,EAD4B;AAEtC,IAAA,WAAW,EAAE,EAFyB;AAGtC,IAAA,SAAS,EAAE,EAH2B;AAItC,IAAA,YAAY,EAAE,EAJwB;AAKtC,IAAA,QAAQ,EAAE;AAL4B,GAAxC;;AAOA,MAAI,QAAJ,EAAc;AACZ,IAAA,SAAS,CAAC,QAAV,GAAqB,CAAC,QAAD,CAArB;;AACA,QAAI,QAAQ,CAAC,IAAb,EAAmB;AACjB,MAAA,SAAS,CAAC,WAAV,GAAwB,CAAC,QAAQ,CAAC,IAAV,CAAxB;;AACA,UAAI,QAAQ,CAAC,EAAb,EAAiB;AACf,QAAA,SAAS,CAAC,YAAV,GAAyB,CACvB;AACE,UAAA,KAAK,EAAE,QAAQ,CAAC,IADlB;AAEE,UAAA,MAAM,EAAE,QAAQ,CAAC;AAFnB,SADuB,CAAzB;;AAMA,YAAI,GAAG,IAAI,GAAX,EAAgB;AACd,UAAA,SAAS,CAAC,QAAV,GAAqB,CACnB,UAAC,IAAD,EAAW;AACT,gBACE,GAAG,IACH,QAAQ,CAAC,EADT,IAEA,QAAQ,CAAC,IAFT,IAGA,QAAQ,CAAC,IAAD,EAAO,QAAQ,CAAC,IAAhB,CAJV,EAKE;AACA,kBAAM,IAAI,GAAG,wBAAwB,CAAC,QAAQ,CAAC,EAAV,EAAc,IAAd,CAArC;;AACA,kBAAI,IAAI,IAAI,GAAZ,EAAiB;AACf,uBAAO,IAAP;AACD;AACF;;AACD,gBACE,GAAG,IACH,QAAQ,CAAC,EADT,IAEA,QAAQ,CAAC,IAFT,IAGA,OAAO,CAAC,IAAD,EAAO,QAAQ,CAAC,EAAhB,CAJT,EAKE;AACA,kBAAM,IAAI,GAAG,wBAAwB,CAAC,IAAD,EAAO,QAAQ,CAAC,IAAhB,CAArC;;AACA,kBAAI,IAAI,IAAI,GAAZ,EAAiB;AACf,uBAAO,IAAP;AACD;AACF;;AACD,gBAAI,GAAG,IAAI,QAAQ,CAAC,IAAhB,IAAwB,QAAQ,CAAC,IAAD,EAAO,QAAQ,CAAC,IAAhB,CAApC,EAA2D;AACzD,kBAAM,IAAI,GAAG,wBAAwB,CAAC,QAAQ,CAAC,IAAV,EAAgB,IAAhB,CAArC;;AACA,kBAAI,IAAI,GAAG,GAAX,EAAgB;AACd,uBAAO,IAAP;AACD;AACF;;AACD,gBACE,GAAG,IACH,QAAQ,CAAC,EADT,IAEA,QAAQ,CAAC,IAFT,IAGA,OAAO,CAAC,IAAD,EAAO,QAAQ,CAAC,EAAhB,CAJT,EAKE;AACA,kBAAM,IAAI,GAAG,wBAAwB,CAAC,IAAD,EAAO,QAAQ,CAAC,IAAhB,CAArC;;AACA,kBAAI,IAAI,GAAG,GAAX,EAAgB;AACd,uBAAO,IAAP;AACD;AACF;;AACD,mBAAO,KAAP;AACD,WA1CkB,CAArB;AA4CD;;AACD,QAAA,SAAS,CAAC,SAAV,GAAsB,CAAC,QAAQ,CAAC,EAAV,CAAtB;AACD,OAtDD,MAsDO;AACL,QAAA,SAAS,CAAC,SAAV,GAAsB,CAAC,QAAQ,CAAC,IAAV,CAAtB;AACD;AACF;AACF;;AAED,SACE,KAAA,CAAA,aAAA,CAAC,kBAAkB,CAAC,QAApB,EAA4B;AAC1B,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAA,QAAV;AAAY,MAAA,cAAc,EAAA,cAA1B;AAA4B,MAAA,SAAS,EAAA,SAArC;AAAuC,MAAA,WAAW,EAAA;AAAlD;AADmB,GAA5B,EAGG,QAHH,CADF;AAOD","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { differenceInCalendarDays, isAfter, isBefore } from 'date-fns';\nimport { isDayPickerRange } from '../../types';\nimport { SelectRangeContext } from './SelectRangeContext';\nimport { addToRange } from './utils/addToRange';\n/** Provides the values for the [[SelectRangeProvider]]. */\nexport function SelectRangeProvider(_a) {\n    var initialProps = _a.initialProps, children = _a.children;\n    var initialSelected;\n    var isRangeMode = false;\n    var min, max;\n    if (isDayPickerRange(initialProps)) {\n        isRangeMode = true;\n        initialSelected = initialProps.defaultSelected;\n        min = initialProps.min;\n        max = initialProps.max;\n    }\n    var _b = React.useState(initialSelected), selected = _b[0], setSelected = _b[1];\n    var handleDayClick = function (day, modifiers, e) {\n        var _a, _b;\n        (_a = initialProps.onDayClick) === null || _a === void 0 ? void 0 : _a.call(initialProps, day, modifiers, e);\n        if (!isDayPickerRange(initialProps)) {\n            return;\n        }\n        var newValue = addToRange(day, selected);\n        if ((min || max) &&\n            selected && (newValue === null || newValue === void 0 ? void 0 : newValue.to) &&\n            newValue.from &&\n            newValue.from !== newValue.to) {\n            var diff = Math.abs(differenceInCalendarDays(newValue === null || newValue === void 0 ? void 0 : newValue.to, newValue === null || newValue === void 0 ? void 0 : newValue.from));\n            if (min && diff < min) {\n                return;\n            }\n            if (max && diff >= max) {\n                return;\n            }\n        }\n        setSelected(newValue);\n        (_b = initialProps.onSelect) === null || _b === void 0 ? void 0 : _b.call(initialProps, newValue, day, modifiers, e);\n    };\n    var modifiers = {\n        selected: [],\n        range_start: [],\n        range_end: [],\n        range_middle: [],\n        disabled: []\n    };\n    if (selected) {\n        modifiers.selected = [selected];\n        if (selected.from) {\n            modifiers.range_start = [selected.from];\n            if (selected.to) {\n                modifiers.range_middle = [\n                    {\n                        after: selected.from,\n                        before: selected.to\n                    }\n                ];\n                if (max || min) {\n                    modifiers.disabled = [\n                        function (date) {\n                            if (max &&\n                                selected.to &&\n                                selected.from &&\n                                isBefore(date, selected.from)) {\n                                var diff = differenceInCalendarDays(selected.to, date);\n                                if (diff >= max) {\n                                    return true;\n                                }\n                            }\n                            if (max &&\n                                selected.to &&\n                                selected.from &&\n                                isAfter(date, selected.to)) {\n                                var diff = differenceInCalendarDays(date, selected.from);\n                                if (diff >= max) {\n                                    return true;\n                                }\n                            }\n                            if (min && selected.from && isBefore(date, selected.from)) {\n                                var diff = differenceInCalendarDays(selected.from, date);\n                                if (diff < min) {\n                                    return true;\n                                }\n                            }\n                            if (min &&\n                                selected.to &&\n                                selected.from &&\n                                isAfter(date, selected.to)) {\n                                var diff = differenceInCalendarDays(date, selected.from);\n                                if (diff < min) {\n                                    return true;\n                                }\n                            }\n                            return false;\n                        }\n                    ];\n                }\n                modifiers.range_end = [selected.to];\n            }\n            else {\n                modifiers.range_end = [selected.from];\n            }\n        }\n    }\n    return (React.createElement(SelectRangeContext.Provider, { value: { selected: selected, handleDayClick: handleDayClick, modifiers: modifiers, isRangeMode: isRangeMode } }, children));\n}\n//# sourceMappingURL=SelectRangeProvider.js.map"]},"metadata":{},"sourceType":"module"}