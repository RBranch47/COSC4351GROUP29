{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses\\\\UH COURSES\\\\Fall 2021\\\\COSC 4351\\\\Booking-Reservation-App\\\\client\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./register.css\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [focused, setFocused] = useState(false);\n\n  const handleFocus = e => {\n    setFocused(true);\n  };\n\n  const [username, setUsername] = useState(\"\");\n  const [fullName, setFullName] = useState(\"\");\n  const [billingAddress, setBillingAddress] = useState(\"\");\n  const [mailingAddress, setMailingAddress] = useState(\"\");\n  const [preferPayment, setPreferPayment] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async e => {\n    e.preventDefault(); // setError(false);\n    // try {\n    //   const res = await axios.post(\"/auth/register\", {\n    //     username,\n    //     fullName,\n    //     billingAddress,\n    //     mailingAddress,\n    //     preferPayment,\n    //     password,\n    //   });\n    //   res.data && window.location.replace(\"/login\");\n    // } catch (err) {\n    //   setError(true);\n    // }\n  };\n\n  const [check, setCheck] = useState(\"false\");\n\n  const handleBilling = () => {\n    !check ? setCheck(true) : setCheck(false);\n    var x = document.getElementById(\"billingInput\");\n\n    if (x.style.display === \"none\") {\n      x.style.display = \"block\";\n    } else {\n      x.style.display = \"none\";\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"registerForm\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"registerTitle\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Username\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"registerInput\",\n          type: \"text\",\n          placeholder: \"Username\",\n          pattern: \"^[A-Za-z0-9]{3,16}$\",\n          required: true,\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          onBlur: handleFocus,\n          focused: focused.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errMessage\",\n          children: \"Username should be 3-16 characters and shouldn't include any special characters!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Full Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"registerInput\",\n          type: \"text\",\n          placeholder: \"Full Name\",\n          pattern: \"^[a-zA-Z'-'\\\\s]{3,}$\",\n          required: true,\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          onBlur: handleFocus,\n          focused: focused.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errMessage\",\n          children: \"Full Name shouldn't include any numbers or special characters!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Mailing Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"registerInput\",\n          type: \"text\",\n          placeholder: \"Mailing Address\",\n          pattern: \"^^[#.0-9a-zA-Z\\\\s,-]+$\",\n          required: true,\n          value: mailingAddress,\n          onChange: e => setMailingAddress(e.target.value),\n          onBlur: handleFocus,\n          focused: focused.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errMessage\",\n          children: \"Mailing Address should be included number, street name, city, state, and zip code!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onClick: () => handleBilling()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"billingTitle\",\n          children: \"Check if Billing same as Mailing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"billingInput\",\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Billing Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"registerInput\",\n          type: \"text\",\n          placeholder: \"Billing Address\",\n          pattern: \"^^[#.0-9a-zA-Z\\\\s,-]+$\",\n          required: true,\n          value: billingAddress,\n          onChange: e => setBillingAddress(e.target.value),\n          onBlur: handleFocus,\n          focused: focused.toString()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"errMessage\",\n          children: \"Biling Address should be included number, street name, city, state, and zip code!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"label\",\n          children: \"Preferred Payment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"registerInput\",\n          value: preferPayment,\n          onChange: e => setPreferPayment(e.target.value),\n          onBlur: handleFocus,\n          focused: focused.toString(),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"cash\",\n            children: \"Cash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"credit\",\n            children: \"Credit Card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"check\",\n            children: \"Check\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"registerButton\",\n        type: \"submit\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"ZjmqLNNLqNvir9sMZAT6Mh0Cxp8=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["D:/Courses/UH COURSES/Fall 2021/COSC 4351/Booking-Reservation-App/client/src/pages/register/Register.jsx"],"names":["axios","useState","Register","focused","setFocused","handleFocus","e","username","setUsername","fullName","setFullName","billingAddress","setBillingAddress","mailingAddress","setMailingAddress","preferPayment","setPreferPayment","password","setPassword","error","setError","handleSubmit","preventDefault","check","setCheck","handleBilling","x","document","getElementById","style","display","target","value","toString"],"mappings":"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","sourcesContent":["import \"./register.css\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function Register() {\r\n  const [focused, setFocused] = useState(false);\r\n  const handleFocus = (e) => {\r\n    setFocused(true);\r\n  };\r\n\r\n  const [username, setUsername] = useState(\"\");\r\n  const [fullName, setFullName] = useState(\"\");\r\n  const [billingAddress, setBillingAddress] = useState(\"\");\r\n  const [mailingAddress, setMailingAddress] = useState(\"\");\r\n  const [preferPayment, setPreferPayment] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(false);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // setError(false);\r\n    // try {\r\n    //   const res = await axios.post(\"/auth/register\", {\r\n    //     username,\r\n    //     fullName,\r\n    //     billingAddress,\r\n    //     mailingAddress,\r\n    //     preferPayment,\r\n    //     password,\r\n    //   });\r\n    //   res.data && window.location.replace(\"/login\");\r\n    // } catch (err) {\r\n    //   setError(true);\r\n    // }\r\n  };\r\n\r\n  const [check, setCheck] = useState(\"false\");\r\n\r\n  const handleBilling = () => {\r\n    !check ? setCheck(true) : setCheck(false);\r\n    var x = document.getElementById(\"billingInput\");\r\n    if (x.style.display === \"none\") {\r\n      x.style.display = \"block\";\r\n    } else {\r\n      x.style.display = \"none\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"register\">\r\n      <form className=\"registerForm\" onSubmit={handleSubmit}>\r\n        <h1 className=\"registerTitle\">Register</h1>\r\n\r\n        <div className=\"formInput\">\r\n          <label className=\"label\">Username</label>\r\n          <input\r\n            className=\"registerInput\"\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            pattern=\"^[A-Za-z0-9]{3,16}$\"\r\n            required={true}\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n            onBlur={handleFocus}\r\n            focused={focused.toString()}\r\n          />\r\n          <span className=\"errMessage\">\r\n            Username should be 3-16 characters and shouldn't include any special\r\n            characters!\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"formInput\">\r\n          <label className=\"label\">Full Name</label>\r\n          <input\r\n            className=\"registerInput\"\r\n            type=\"text\"\r\n            placeholder=\"Full Name\"\r\n            pattern=\"^[a-zA-Z'-'\\s]{3,}$\"\r\n            required={true}\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            onBlur={handleFocus}\r\n            focused={focused.toString()}\r\n          />\r\n          <span className=\"errMessage\">\r\n            Full Name shouldn't include any numbers or special characters!\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"formInput\">\r\n          <label className=\"label\">Mailing Address</label>\r\n          <input\r\n            className=\"registerInput\"\r\n            type=\"text\"\r\n            placeholder=\"Mailing Address\"\r\n            pattern=\"^^[#.0-9a-zA-Z\\s,-]+$\"\r\n            required={true}\r\n            value={mailingAddress}\r\n            onChange={(e) => setMailingAddress(e.target.value)}\r\n            onBlur={handleFocus}\r\n            focused={focused.toString()}\r\n          />\r\n          <span className=\"errMessage\">\r\n            Mailing Address should be included number, street name, city, state,\r\n            and zip code!\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"checkbox\">\r\n          <input type=\"checkbox\" onClick={() => handleBilling()} />\r\n          <label className=\"billingTitle\">\r\n            Check if Billing same as Mailing\r\n          </label>\r\n        </div>\r\n\r\n        <div id=\"billingInput\" className=\"formInput\">\r\n          <label className=\"label\">Billing Address</label>\r\n          <input\r\n            className=\"registerInput\"\r\n            type=\"text\"\r\n            placeholder=\"Billing Address\"\r\n            pattern=\"^^[#.0-9a-zA-Z\\s,-]+$\"\r\n            required={true}\r\n            value={billingAddress}\r\n            onChange={(e) => setBillingAddress(e.target.value)}\r\n            onBlur={handleFocus}\r\n            focused={focused.toString()}\r\n          />\r\n          <span className=\"errMessage\">\r\n            Biling Address should be included number, street name, city, state,\r\n            and zip code!\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"formInput\">\r\n          <label className=\"label\">Preferred Payment</label>\r\n          <select\r\n            className=\"registerInput\"\r\n            value={preferPayment}\r\n            onChange={(e) => setPreferPayment(e.target.value)}\r\n            onBlur={handleFocus}\r\n            focused={focused.toString()}\r\n          >\r\n            <option value=\"cash\">Cash</option>\r\n            <option value=\"credit\">Credit Card</option>\r\n            <option value=\"check\">Check</option>\r\n          </select>\r\n        </div>\r\n\r\n        {/* <label>Password</label>\r\n        <input\r\n          className=\"registerInput\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password...\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        /> */}\r\n        <button className=\"registerButton\" type=\"submit\">\r\n          Register\r\n        </button>\r\n      </form>\r\n      {/* {error && (\r\n        <span style={{ color: \"red\", marginTop: \"10px\" }}>\r\n          Something went wrong!\r\n        </span>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}