{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses\\\\UH COURSES\\\\Fall 2021\\\\COSC 4351\\\\Booking-Reservation-App\\\\client\\\\src\\\\components\\\\pay\\\\Pay.jsx\",\n    _s = $RefreshSig$();\n\nimport StripeCheckout from \"react-stripe-checkout\";\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Context } from \"../../context/Context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Pay(props) {\n  _s();\n\n  const {\n    user\n  } = useContext(Context);\n  const KEY = process.env.REACT_APP_STRIPE;\n  const [stripeToken, setStripeToken] = useState(null); // Stripe method\n\n  const onToken = token => {\n    setStripeToken(token);\n  }; // API *** Send and Store Payment to database\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n\n\n  const createPayment = async stripeId => {\n    try {\n      const res = await axios.post(\"/payment\", {\n        userId: user ? user._id : null,\n        stripeId: stripeId,\n        date: props.dateTime.toUTCString(),\n        table: props.tableName\n      });\n      console.log(res.data);\n    } catch (error) {\n      console.log(error);\n    }\n  }; // API *** Stripe Payment Checkout\n\n\n  useEffect(() => {\n    const makeRequest = async () => {\n      try {\n        const res = await axios.post(\"/checkout/payment\", {\n          tokenId: stripeToken.id,\n          amount: 1000\n        });\n        console.log(res.data);\n        createPayment(res.data.id);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    stripeToken && makeRequest();\n  }, [createPayment, stripeToken]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"paymentNotice\",\n      children: \"*** Due to Weekend Reservation, We need to hold $10 fee. Sorry for this Inconvenience ***\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      name: \"Restaurant 4351\",\n      image: \"https://avatars.githubusercontent.com/u/78432157?s=400&u=a3542854353b321e90e5f526d6ac7d5b30a702bf&v=4\",\n      billingAddress: true,\n      shippingAddress: true,\n      description: `Your Holding Charge is $10`,\n      amount: 1000,\n      token: onToken,\n      stripeKey: KEY,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"paymentButton\",\n        children: \"PAY NOW\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Pay, \"gK0pZlAKfb4yLOC1dI2vkksi7ac=\");\n\n_c = Pay;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pay\");","map":{"version":3,"sources":["D:/Courses/UH COURSES/Fall 2021/COSC 4351/Booking-Reservation-App/client/src/components/pay/Pay.jsx"],"names":["StripeCheckout","React","useState","useEffect","useContext","axios","Context","Pay","props","user","KEY","process","env","REACT_APP_STRIPE","stripeToken","setStripeToken","onToken","token","createPayment","stripeId","res","post","userId","_id","date","dateTime","toUTCString","table","tableName","console","log","data","error","makeRequest","tokenId","id","amount"],"mappings":";;;AAAA,OAAOA,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,uBAAxB;;AAEA,eAAe,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AACjC,QAAM;AAAEC,IAAAA;AAAF,MAAWL,UAAU,CAACE,OAAD,CAA3B;AACA,QAAMI,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,gBAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C,CAHiC,CAKjC;;AACA,QAAMc,OAAO,GAAIC,KAAD,IAAW;AACzBF,IAAAA,cAAc,CAACE,KAAD,CAAd;AACD,GAFD,CANiC,CAUjC;AACA;;;AACA,QAAMC,aAAa,GAAG,MAAOC,QAAP,IAAoB;AACxC,QAAI;AACF,YAAMC,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,UAAX,EAAuB;AACvCC,QAAAA,MAAM,EAAEb,IAAI,GAAGA,IAAI,CAACc,GAAR,GAAc,IADa;AAEvCJ,QAAAA,QAAQ,EAAEA,QAF6B;AAGvCK,QAAAA,IAAI,EAAEhB,KAAK,CAACiB,QAAN,CAAeC,WAAf,EAHiC;AAIvCC,QAAAA,KAAK,EAAEnB,KAAK,CAACoB;AAJ0B,OAAvB,CAAlB;AAMAC,MAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACW,IAAhB;AACD,KARD,CAQE,OAAOC,KAAP,EAAc;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,GAZD,CAZiC,CA0BjC;;;AACA7B,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM8B,WAAW,GAAG,YAAY;AAC9B,UAAI;AACF,cAAMb,GAAG,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAAW,mBAAX,EAAgC;AAChDa,UAAAA,OAAO,EAAEpB,WAAW,CAACqB,EAD2B;AAEhDC,UAAAA,MAAM,EAAE;AAFwC,SAAhC,CAAlB;AAIAP,QAAAA,OAAO,CAACC,GAAR,CAAYV,GAAG,CAACW,IAAhB;AACAb,QAAAA,aAAa,CAACE,GAAG,CAACW,IAAJ,CAASI,EAAV,CAAb;AACD,OAPD,CAOE,OAAOH,KAAP,EAAc;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD;AACF,KAXD;;AAYAlB,IAAAA,WAAW,IAAImB,WAAW,EAA1B;AACD,GAdQ,EAcN,CAACf,aAAD,EAAgBJ,WAAhB,CAdM,CAAT;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,cAAD;AACE,MAAA,IAAI,EAAC,iBADP;AAEE,MAAA,KAAK,EAAC,uGAFR;AAGE,MAAA,cAAc,MAHhB;AAIE,MAAA,eAAe,MAJjB;AAKE,MAAA,WAAW,EAAG,4BALhB;AAME,MAAA,MAAM,EAAE,IANV;AAOE,MAAA,KAAK,EAAEE,OAPT;AAQE,MAAA,SAAS,EAAEN,GARb;AAAA,6BAUE;AAAQ,QAAA,SAAS,EAAC,eAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA/DuBH,G;;KAAAA,G","sourcesContent":["import StripeCheckout from \"react-stripe-checkout\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../context/Context\";\r\n\r\nexport default function Pay(props) {\r\n  const { user } = useContext(Context);\r\n  const KEY = process.env.REACT_APP_STRIPE;\r\n  const [stripeToken, setStripeToken] = useState(null);\r\n\r\n  // Stripe method\r\n  const onToken = (token) => {\r\n    setStripeToken(token);\r\n  };\r\n\r\n  // API *** Send and Store Payment to database\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const createPayment = async (stripeId) => {\r\n    try {\r\n      const res = await axios.post(\"/payment\", {\r\n        userId: user ? user._id : null,\r\n        stripeId: stripeId,\r\n        date: props.dateTime.toUTCString(),\r\n        table: props.tableName,\r\n      });\r\n      console.log(res.data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  // API *** Stripe Payment Checkout\r\n  useEffect(() => {\r\n    const makeRequest = async () => {\r\n      try {\r\n        const res = await axios.post(\"/checkout/payment\", {\r\n          tokenId: stripeToken.id,\r\n          amount: 1000,\r\n        });\r\n        console.log(res.data);\r\n        createPayment(res.data.id);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    stripeToken && makeRequest();\r\n  }, [createPayment, stripeToken]);\r\n\r\n  return (\r\n    <div className=\"payment\">\r\n      <span className=\"paymentNotice\">\r\n        *** Due to Weekend Reservation, We need to hold $10 fee. Sorry for this\r\n        Inconvenience ***\r\n      </span>\r\n      <StripeCheckout\r\n        name=\"Restaurant 4351\"\r\n        image=\"https://avatars.githubusercontent.com/u/78432157?s=400&u=a3542854353b321e90e5f526d6ac7d5b30a702bf&v=4\"\r\n        billingAddress\r\n        shippingAddress\r\n        description={`Your Holding Charge is $10`}\r\n        amount={1000}\r\n        token={onToken}\r\n        stripeKey={KEY}\r\n      >\r\n        <button className=\"paymentButton\">PAY NOW</button>\r\n      </StripeCheckout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}