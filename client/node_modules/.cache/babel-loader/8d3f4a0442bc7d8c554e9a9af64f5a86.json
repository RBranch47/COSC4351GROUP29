{"ast":null,"code":"import * as React from 'react';\nimport { addDays, addMonths, addWeeks, isSameMonth } from 'date-fns';\nimport { useDayPicker, useNavigation } from '..';\nimport { FocusContext } from './FocusContext';\n/** The provider for the [[FocusContext]]. */\n\nexport function FocusProvider(_a) {\n  var children = _a.children;\n\n  var _b = React.useState(),\n      focusedDay = _b[0],\n      setDay = _b[1];\n\n  var _c = useNavigation(),\n      goToMonth = _c.goToMonth,\n      displayMonths = _c.displayMonths;\n\n  var numberOfMonths = useDayPicker().numberOfMonths;\n\n  var blur = function () {\n    return setDay(undefined);\n  };\n\n  var focus = function (date) {\n    return setDay(date);\n  };\n\n  var switchMonth = function (date, offset) {\n    if (displayMonths.some(function (m) {\n      return isSameMonth(date, m);\n    })) return;\n\n    if (offset < 0) {\n      goToMonth(addMonths(date, 1 + offset));\n    } else {\n      goToMonth(date);\n    }\n  };\n\n  var focusDayBefore = function () {\n    if (!focusedDay) return;\n    var before = addDays(focusedDay, -1);\n    setDay(before);\n    switchMonth(before, numberOfMonths * -1);\n  };\n\n  var focusDayAfter = function () {\n    if (!focusedDay) return;\n    var after = addDays(focusedDay, 1);\n    setDay(after);\n    switchMonth(after, numberOfMonths);\n  };\n\n  var focusWeekBeforeDay = function () {\n    if (!focusedDay) return;\n    var up = addWeeks(focusedDay, -1);\n    setDay(up);\n    switchMonth(up, numberOfMonths * -1);\n  };\n\n  var focusWeekAfterDay = function () {\n    if (!focusedDay) return;\n    var down = addWeeks(focusedDay, 1);\n    setDay(down);\n    switchMonth(down, numberOfMonths);\n  };\n\n  var setters = {\n    blur: blur,\n    focus: focus,\n    focusDayAfter: focusDayAfter,\n    focusDayBefore: focusDayBefore,\n    focusWeekAfterDay: focusWeekAfterDay,\n    focusWeekBeforeDay: focusWeekBeforeDay\n  };\n  return React.createElement(FocusContext.Provider, {\n    value: [focusedDay, setters]\n  }, children);\n}","map":{"version":3,"sources":["../../../src/contexts/FocusContext/FocusProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import * as React from 'react';\nimport { addDays, addMonths, addWeeks, isSameMonth } from 'date-fns';\nimport { useDayPicker, useNavigation } from '..';\nimport { FocusContext } from './FocusContext';\n/** The provider for the [[FocusContext]]. */\nexport function FocusProvider(_a) {\n    var children = _a.children;\n    var _b = React.useState(), focusedDay = _b[0], setDay = _b[1];\n    var _c = useNavigation(), goToMonth = _c.goToMonth, displayMonths = _c.displayMonths;\n    var numberOfMonths = useDayPicker().numberOfMonths;\n    var blur = function () { return setDay(undefined); };\n    var focus = function (date) { return setDay(date); };\n    var switchMonth = function (date, offset) {\n        if (displayMonths.some(function (m) { return isSameMonth(date, m); }))\n            return;\n        if (offset < 0) {\n            goToMonth(addMonths(date, 1 + offset));\n        }\n        else {\n            goToMonth(date);\n        }\n    };\n    var focusDayBefore = function () {\n        if (!focusedDay)\n            return;\n        var before = addDays(focusedDay, -1);\n        setDay(before);\n        switchMonth(before, numberOfMonths * -1);\n    };\n    var focusDayAfter = function () {\n        if (!focusedDay)\n            return;\n        var after = addDays(focusedDay, 1);\n        setDay(after);\n        switchMonth(after, numberOfMonths);\n    };\n    var focusWeekBeforeDay = function () {\n        if (!focusedDay)\n            return;\n        var up = addWeeks(focusedDay, -1);\n        setDay(up);\n        switchMonth(up, numberOfMonths * -1);\n    };\n    var focusWeekAfterDay = function () {\n        if (!focusedDay)\n            return;\n        var down = addWeeks(focusedDay, 1);\n        setDay(down);\n        switchMonth(down, numberOfMonths);\n    };\n    var setters = {\n        blur: blur,\n        focus: focus,\n        focusDayAfter: focusDayAfter,\n        focusDayBefore: focusDayBefore,\n        focusWeekAfterDay: focusWeekAfterDay,\n        focusWeekBeforeDay: focusWeekBeforeDay\n    };\n    return (React.createElement(FocusContext.Provider, { value: [focusedDay, setters] }, children));\n}\n//# sourceMappingURL=FocusProvider.js.map"]},"metadata":{},"sourceType":"module"}